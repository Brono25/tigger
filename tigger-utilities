#!/bin/dash




  #################
 #    Defines    #
#################


REPO="$PWD/.tigger"
INDEX_DIR="$REPO/index"
PRGRM=$(basename "$0")

TRUE=0
FALSE=1


  #################
 #   Functions   #
#################


#emulate perls die function
die()
{
	err_msg="$1"
	echo "$err_msg" 1>&2
	exit 1
}

die_stdout()
{
  err_msg="$1"
  echo "$err_msg" 
  exit 0
}



check_repo_exists()
{
  [ -d  "$REPO" ] || die "$PRGRM: error: tigger repository directory .tigger not found"
  return 0  
}


# The 'heads' directory holds files (pointers) to branches and their most current commit.
# The HEAD file points to the current active branch in 'heads'. This function returns the current
# active branch.
find_head()
{
  head=$(cat "$REPO/HEAD")
  echo -n "$head"
  return 0
}

# Finds the current active branch and returns the commit it points to.
find_where_head_points()
{
  head=$("find_head")
  commit_num=$(cat "$REPO/heads/$head")
  echo -n "$commit_num"
  return 0
}


find_where_branch_points()
{
  branch="$1"
  [ -z "$branch" ] && return 1
  [ -f "$REPO/heads/$branch" ] || return 1

  commit_num=$(cat "$REPO/heads/$branch")
  echo -n "$commit_num"
  return 0
}


is_direcotry_empty()
{
  dir="$1"
  dir_contents=$(find "$dir" -maxdepth 1 -type f |wc -l)
  if [ "$index_contents" -eq 0 ] 
  then
    return "$TRUE"
  else
    return "$FALSE"
  fi
}

is_file_in_direcotry()
{
  file="$1"
  dir="$2"
  if [ -f "$dir/$file" ] 
  then
    return "$TRUE"
  else
    return "$FALSE"
  fi
}


is_file_in_dir1_diff_to_dir2()
{
  file="$1"
  dir1_file="$2/$file"
  dir2_file="$3/$file"
  
  is_difference=$(diff -q "$dir1_file" "$dir2_file"|wc -c| tr -d ' ') 2> /dev/null
  if [ "$is_difference" -ne  0 ]
  then
    return "$TRUE"
  else
    return "$FALSE"
  fi
}







is_index_empty()
{
  index_contents=$(ls -A1 "$REPO/index"|wc -l|xargs)
  if [ "$index_contents" -eq 0 ] 
  then
    return $TRUE
  else
    return $FALSE
  fi
}

is_file_in_pwd()
{ 
  directory_file="$1"
  if [ -f "$directory_file" ] 
  then
    return $TRUE
  else
    return $FALSE
  fi
}

is_file_in_repo()
{
  commit_file="$1"

  if [ -f "$commit_file" ] 
  then
    return $TRUE
  else
    return $FALSE
  fi
}

is_file_in_index()
{
  index_file="$1"
  file_name=$(basename "$index_file")
  index_file="$REPO/index/$file_name"
  if [ -f "$index_file" ] 
  then
    return $TRUE
  else
    return $FALSE
  fi
}


is_file_in_pwd_diff_to_index()
{
  directory_file="$1"
  index_file="$2"
  is_difference=$(diff -q "$directory_file" "$index_file"|wc -c| tr -d ' ') 2> /dev/null
  if [ "$is_difference" -ne  0 ]
  then
    return $TRUE
  else
    return $FALSE
  fi
}

is_file_in_repo_diff_to_index()
{
  commit_file="$1"
  index_file="$2"
  is_difference=$(diff -q "$commit_file" "$index_file"|wc -c| tr -d ' ') 2> /dev/null
  if [ "$is_difference" -ne  0 ]
  then
    return $TRUE
  else
    return $FALSE
  fi
  
}

is_file_in_pwd_diff_to_repo()
{
  commit_file="$1"
  directory_file="$2"
  is_difference=$(diff -q "$commit_file" "$directory_file"|wc -c| tr -d ' ') 2> /dev/null
  if [ "$is_difference" -ne  0 ]
  then
    return $TRUE
  else
    return $FALSE
  fi
}














