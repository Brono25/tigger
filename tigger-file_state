#!/bin/dash

. tigger-utilities


# A files state is whether it exists, or is changed ∆, in the repo and/or index and/or pwd.
# its existence or ∆ in each directory is given a bit position, total 6 bits. Each state is
# then tested and a bit set to 1 if the file is found to exist or be ∆ in that directory.
# All the 6 bits at the end produce a unique hex number that gives each file a identifiable status.

# These states are used to inform other tigger funcitons about what error messages to use.



  #################
 #    Defines    #
#################

# FLAG bit positions
D3_FLAG=0x08
D2_FLAG=0x10
D1_FLAG=0x20
DELTA_D1_D2_FLAG=0x04
DELTA_D2_D3_FLAG=0x02
DELTA_D1_D3_FLAG=0x01

#The table below is a mapping of all possible file states to their hex number

#                              |__exists___|_________is different____________|   
#     Files states hex value   |D1 | D2| D3| ∆(D1-D2) | ∆(D2-D3)  | ∆(D1-D3) |  
#------------------------------|---|---|---|----------|-----------|----------|
NONE_FOUND=0x00               #| 0 | 0 | 0 |     0    |     0     |    0     | 
D3_ONLY=0x08                  #| 0 | 0 | 1 |     0    |     0     |    0     |  
D2_ONLY=0x10                  #| 0 | 1 | 0 |     0    |     0     |    0     |  
D2_AND_D3=0x18                #| 0 | 1 | 1 |     0    |     0     |    0     |  
DELTA_D2_D3=0x1A              #| 0 | 1 | 1 |     0    |     1     |    0     |  
D1_ONLY=0x20                  #| 1 | 0 | 0 |     0    |     0     |    0     |  
D1_AND_D3=0x28                #| 1 | 0 | 1 |     0    |     0     |    0     | 
DELTA_D1_D3=0x29              #| 1 | 0 | 1 |     0    |     0     |    1     |  
D1_AND_D2=0x30                #| 1 | 1 | 0 |     0    |     0     |    0     |  
DELTA_D1_D2=0x34              #| 1 | 1 | 0 |     1    |     0     |    0     |  
ALL_SAME=0x38                 #| 1 | 1 | 1 |     0    |     0     |    0     |  
DELTA_D2_D3_DELTA_D1_D3=0x3B  #| 1 | 1 | 1 |     0    |     1     |    1     |  
DELTA_D1_D2_DELTA_D1_D3=0x3D  #| 1 | 1 | 1 |     1    |     0     |    1     |  
DELTA_D1_D2_DELTA_D2_D3=0x3E  #| 1 | 1 | 1 |     1    |     1     |    0     |  
ALL_DIFFERENT=0x3F            #| 1 | 1 | 1 |     1    |     1     |    1     | 


PWD_ONLY="$D3_ONLY"
INDEX_ONLY="$D2_ONLY"  
IND_AND_PWD="$D2_AND_D3"
DELTA_IND_PWD="$DELTA_D2_D3"
REP_ONLY="$D1_ONLY"   
REP_AND_PWD="$D1_AND_D3"  
DELTA_REP_PWD="$DELTA_D1_D3"   
REP_AND_IND="$D1_AND_D2" 
DELTA_REP_IND="$DELTA_D1_D2" 
DELTA_IND_PWD_DELTA_REP_PWD="$DELTA_D2_D3_DELTA_D1_D3" 
DELTA_REP_IND_DELTA_REP_PWD="$DELTA_D1_D2_DELTA_D1_D3"
DELTA_REP_IND_DELTA_IND_PWD="$DELTA_D1_D2_DELTA_D2_D3"



  #################
 #   Function    #
#################

#Finds the status of a file with respect to 3 directories
#Usage: find_files_state <file> <dir1> <dir2> <dir3>
find_files_state()
{
  file="$1"
  dir1="$2"
  dir2="$3"
  dir3="$4"

  state="$NONE_FOUND" #default state 

  is_file_in_direcotry "$file" "$dir1" && state=$((state | D1_FLAG)); ret_d1=$?
  is_file_in_direcotry "$file" "$dir2" && state=$((state | D2_FLAG)); ret_d2=$?
  is_file_in_direcotry "$file" "$dir3" && state=$((state | D3_FLAG)); ret_d3=$?
  
  if [ $ret_d3 = $TRUE ] && [ $ret_d2 = $TRUE ]
  then
    is_file_in_dir1_diff_to_dir2 "$file" "$dir2" "$dir3" && state=$((state | DELTA_D2_D3_FLAG))  
  fi
  if [ $ret_d1 = $TRUE ] && [ $ret_d2 = $TRUE ]
  then
    is_file_in_dir1_diff_to_dir2 "$file" "$dir1" "$dir2" && state=$((state | DELTA_D1_D2_FLAG))
  fi
  if [ $ret_d1 = $TRUE ] && [ $ret_d3 = $TRUE ]
  then
    is_file_in_dir1_diff_to_dir2 "$file" "$dir1" "$dir3" && state=$((state | DELTA_D1_D3_FLAG))
  fi
  printf "0x%02X" "$state"
  return 0  
}














