#!/bin/dash


. tigger-utilities
. tigger-file_state
check_repo_exists

  #################
 #    Defines    #
#################


CACHED_OPT=$FALSE
FORCE_OPT=$FALSE


# Mapping file states to tigger-rm error messages
STAGED_CHANGES_1=$IND_AND_PWD
STAGED_CHANGES_2=$DELTA_REP_IND_DELTA_REP_PWD
REPO_DIFF_WRKING_FILE=$DELTA_IND_PWD_DELTA_REP_PWD
IND_DIFF_WRK_REPO_1=$DELTA_REP_IND_DELTA_IND_PWD
IND_DIFF_WRK_REPO_2=$DELTA_IND_PWD
IND_DIFF_WRK_REPO_3=$ALL_DIFFERENT

  #################
 #   Functions   #
#################


delete_index_files()
{

	for file in "$@"
	do
		rm -f "$REPO/index/$file" 

	done

	return 0
}

delete_pwd_files()
{
	for file in "$@"
	do
		rm -f "$PWD/$file" 
	done

	return 0
}



  #################
 #     Main      #
#################

#convert long options to short options for getopts
for arg in "$@"; do
  shift
  case "$arg" in
    '--cached') set -- "$@" '-c'   ;;
    '--force')  set -- "$@" '-f'   ;;
    *)          set -- "$@" "$arg" ;;
  esac
done


while getopts ':cf' opts
do
	case "$opts" in
		c) CACHED_OPT=$TRUE;;
		f) FORCE_OPT=$TRUE;;
		\?) die "usage: $PRGRM [--force] [--cached] <filenames>"
	esac
done
shift "$(($OPTIND - 1))"


#check usage
[ $# -ne 0 ] || die "usage: $PRGRM [--force] [--cached] <filenames>"





#if forced is active then no error checking 
if [ $FORCE_OPT -eq $TRUE ] 
then

	#make sure all files exist in the index before proceeding
	for file in "$@"
	do
	  is_file_in_index "$file" || die "$PRGRM: error: '$file' is not in the tigger repository"
	done

	if [ $CACHED_OPT -eq $FALSE ]
		then
			delete_index_files "$@"
			delete_pwd_files "$@"
		else
			delete_index_files "$@"
		fi


else

	for file in "$@"
	do

		status=$(find_files_state "$file" 'HEAD')

		is_file_in_index "$file"                   || die "$PRGRM: error: '$file' is not in the tigger repository"
		[ "$status" = "$IND_DIFF_WRK_REPO_1" ]     && die "$PRGRM: error: '$file' in index is different to both the working file and the repository"  
		[ "$status" = "$IND_DIFF_WRK_REPO_2" ]     && die "$PRGRM: error: '$file' in index is different to both the working file and the repository"
		[ "$status" = "$IND_DIFF_WRK_REPO_3" ]     && die "$PRGRM: error: '$file' in index is different to both the working file and the repository" 

		if [ $CACHED_OPT -eq $FALSE ]
		then
			[ "$status" = "$STAGED_CHANGES_1" ]      && die "$PRGRM: error: '$file' has staged changes in the index"
			[ "$status" = "$STAGED_CHANGES_2" ]      && die "$PRGRM: error: '$file' has staged changes in the index"
			[ "$status" = "$REPO_DIFF_WRKING_FILE" ] && die "$PRGRM: error: '$file' in the repository is different to the working file" 
		fi

	done

	if [ $CACHED_OPT -eq $FALSE ]
		then
			delete_index_files "$@"
			delete_pwd_files "$@"
		else
			delete_index_files "$@"
		fi

fi

exit 0




